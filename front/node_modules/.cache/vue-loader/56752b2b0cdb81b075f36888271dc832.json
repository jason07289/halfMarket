{"remainingRequest":"C:\\Users\\s02p31a303\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\s02p31a303\\front\\src\\views\\MapSearchPage.vue?vue&type=style&index=0&id=0b904d89&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\s02p31a303\\front\\src\\views\\MapSearchPage.vue","mtime":1591083870538},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\s02p31a303\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZnVsbHBhZ2UtY29udGFpbmVyIHsNCiAgLyogaGVpZ2h0OiAxMDAlOyovDQogIC8qIHBvc2l0aW9uOiBmaXhlZDsgKi8NCiAgbWFyZ2luOiAwcHg7DQogIHBhZGRpbmc6IDBweDsNCn0NCi5mdWxscGFnZS1tYXAgew0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQp9DQo="},{"version":3,"sources":["MapSearchPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MapSearchPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container fill-height class=\"fullpage-container\" fluid>\r\n    <v-layout wrap class=\"ma-0\">\r\n      <v-flex sm9 xs12>\r\n        <div\r\n          id=\"map\"\r\n          v-bind:style=\"{\r\n            width: '100%',\r\n            height: windowHeight - headerHeight + 'px',\r\n          }\"\r\n        ></div>\r\n      </v-flex>\r\n      <v-flex sm3 hidden-xs-only>\r\n        <v-card\r\n          v-bind:style=\"{\r\n            width: '100%',\r\n            height: windowHeight - 64 + 'px',\r\n            overflow: 'auto',\r\n          }\"\r\n        >\r\n          <v-container id=\"filterArea\" class=\"pa-0\" style=\"\">\r\n            <v-card-title class=\"headline\">검색 필터</v-card-title>\r\n            <v-divider></v-divider>\r\n\r\n            <!--카테고리 category-->\r\n            <v-card-title class=\"pb-0\">\r\n              카테고리\r\n            </v-card-title>\r\n            <v-card-title class=\"py-0\">\r\n              <v-row justify-center>\r\n                <v-col cols=\"6\" class=\"selectButtonArea pa-1\">\r\n                  <v-btn\r\n                    style=\"width: -webkit-fill-available;\"\r\n                    @click=\"categoryButtonClicked('food')\"\r\n                    :color=\"categoryButtonColor('food')\"\r\n                    >음식</v-btn\r\n                  >\r\n                </v-col>\r\n                <v-col cols=\"6\" class=\"selectButtonArea pa-1\">\r\n                  <v-btn\r\n                    style=\"width: -webkit-fill-available;\"\r\n                    @click=\"categoryButtonClicked('delivery')\"\r\n                    :color=\"categoryButtonColor('delivery')\"\r\n                    >택배</v-btn\r\n                  >\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-title>\r\n            <v-divider></v-divider>\r\n\r\n            <!--거리 distance-->\r\n            <v-card-title class=\"pb-0\">\r\n              거리\r\n            </v-card-title>\r\n            <v-card-title class=\"py-0\">\r\n              <v-row justify-center>\r\n                <v-col\r\n                  cols=\"4\"\r\n                  class=\"selectButtonArea pa-1\"\r\n                  v-for=\"(dis, index) in distances\"\r\n                  :key=\"'distance' + index\"\r\n                >\r\n                  <v-btn\r\n                    style=\"width: -webkit-fill-available;\"\r\n                    @click=\"distanceButtonClicked(dis)\"\r\n                    :color=\"distanceButtonColor(dis)\"\r\n                    >{{ dis }}M</v-btn\r\n                  >\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-title>\r\n          </v-container>\r\n\r\n          <v-container\r\n            class=\"pa-0 mt-3\"\r\n            v-bind:style=\"{\r\n              overflow: 'auto',\r\n              height:\r\n                windowHeight - headerHeight - filterAreaHeight - 12 + 'px',\r\n            }\"\r\n          >\r\n            <v-list style=\"width:100%\">\r\n              <v-list-item\r\n                v-for=\"(search, index) in searchList\"\r\n                :key=\"index + 'store'\"\r\n                class=\"pa-0\"\r\n              >\r\n                <v-hover v-slot:default=\"{ hover }\" open-delay=\"50\">\r\n                  <v-card\r\n                    flat\r\n                    :color=\"hover ? '#B2CCFF' : '#EAEAEA'\"\r\n                    class=\"ma-1 px-3\"\r\n                    style=\"width:100%\"\r\n                  >\r\n                    <v-card-text class=\"subtitle-1 font-weight-bold pa-0 pt-1\">\r\n                      {{ search }}\r\n                    </v-card-text>\r\n                  </v-card>\r\n                </v-hover>\r\n              </v-list-item>\r\n            </v-list>\r\n          </v-container>\r\n        </v-card>\r\n      </v-flex>\r\n    </v-layout>\r\n    <!-- 모바일 떠다니는 버튼 -->\r\n    <v-btn\r\n      fab\r\n      dark\r\n      fixed\r\n      bottom\r\n      right\r\n      color=\"blue --lighten1\"\r\n      class=\"d-flex d-sm-none\"\r\n      @click=\"filterDialog = true\"\r\n    >\r\n      <v-icon>mdi-view-headline</v-icon>\r\n    </v-btn>\r\n\r\n    <!-- filter dialog -->\r\n    <v-dialog v-model=\"filterDialog\" max-width=\"290\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">검색 필터</v-card-title>\r\n        <v-divider></v-divider>\r\n\r\n        <!--카테고리 category-->\r\n        <v-card-title style=\"\">\r\n          카테고리\r\n        </v-card-title>\r\n        <v-card-title class=\"py-0\">\r\n          <v-row justify-center>\r\n            <v-col cols=\"6\" class=\"selectButtonArea pa-1\">\r\n              <v-btn\r\n                style=\"width: -webkit-fill-available;\"\r\n                @click=\"categoryButtonClicked('food')\"\r\n                :color=\"categoryButtonColor('food')\"\r\n                >음식</v-btn\r\n              >\r\n            </v-col>\r\n            <v-col cols=\"6\" class=\"selectButtonArea pa-1\">\r\n              <v-btn\r\n                style=\"width: -webkit-fill-available;\"\r\n                @click=\"categoryButtonClicked('delivery')\"\r\n                :color=\"categoryButtonColor('delivery')\"\r\n                >택배</v-btn\r\n              >\r\n            </v-col>\r\n          </v-row>\r\n        </v-card-title>\r\n        <v-divider></v-divider>\r\n\r\n        <!--거리 distance-->\r\n        <v-card-title style=\"\">\r\n          거리\r\n        </v-card-title>\r\n        <v-card-title class=\"py-0\">\r\n          <v-row justify-center>\r\n            <v-col\r\n              cols=\"4\"\r\n              class=\"selectButtonArea pa-1\"\r\n              v-for=\"(dis, index) in distances\"\r\n              :key=\"'distance' + index\"\r\n            >\r\n              <v-btn\r\n                style=\"width: -webkit-fill-available;\"\r\n                @click=\"distanceButtonClicked(dis)\"\r\n                :color=\"distanceButtonColor(dis)\"\r\n                >{{ dis }}M</v-btn\r\n              >\r\n            </v-col>\r\n          </v-row>\r\n        </v-card-title>\r\n\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n\r\n          <v-btn color=\"primary\" text @click=\"filterDialog = false\">\r\n            닫기\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nvar MARKER_WIDTH = 33, // 기본, 클릭 마커의 너비\r\n  MARKER_HEIGHT = 36, // 기본, 클릭 마커의 높이\r\n  OFFSET_X = 12, // 기본, 클릭 마커의 기준 X좌표\r\n  OFFSET_Y = MARKER_HEIGHT, // 기본, 클릭 마커의 기준 Y좌표\r\n  OVER_MARKER_WIDTH = 40, // 오버 마커의 너비\r\n  OVER_MARKER_HEIGHT = 42, // 오버 마커의 높이\r\n  OVER_OFFSET_X = 13, // 오버 마커의 기준 X좌표\r\n  OVER_OFFSET_Y = OVER_MARKER_HEIGHT, // 오버 마커의 기준 Y좌표\r\n  SPRITE_MARKER_URL =\r\n    \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markers_sprites2.png\", // 스프라이트 마커 이미지 URL\r\n  SPRITE_WIDTH = 126, // 스프라이트 이미지 너비\r\n  SPRITE_HEIGHT = 146, // 스프라이트 이미지 높이\r\n  SPRITE_GAP = 10; // 스프라이트 이미지에서 마커간 간격\r\n\r\nvar markerSize;\r\nvar markerOffset;\r\nvar overMarkerSize;\r\nvar overMarkerOffset;\r\nvar spriteImageSize;\r\nexport default {\r\n  name: \"MapSearchPage\",\r\n  components: {},\r\n  data: () => ({\r\n    map: null,\r\n    refreshFlag: false,\r\n    filterDialog: false,\r\n    categoryFood: true,\r\n    categoryDelivery: true,\r\n    distance: 100,\r\n    distances: [100, 200, 300],\r\n    windowHeight: 100,\r\n    filterAreaHeight: 100,\r\n    headerHeight: 64,\r\n    positions: [\r\n      { name: \"a\", latitude: 37.4954257, longitude: 127.039 },\r\n      { name: \"b\", latitude: 37.4954257, longitude: 127.04 },\r\n      { name: \"c\", latitude: 37.4954257, longitude: 127.041 },\r\n    ],\r\n    selectedMarker: null,\r\n  }),\r\n  created() {\r\n    if (!(window.kakao && window.kakao.maps && window.kakao.services))\r\n      this.addMapScript();\r\n    if (!window.kakao.services) this.addServiceScript();\r\n\r\n    // console.log(window.kakao.services)\r\n\r\n    this.windowHeight = window.innerHeight;\r\n    window.addEventListener(\"resize\", () => {\r\n      this.windowHeight = window.innerHeight;\r\n      // console.log(this.windowHeight)\r\n    });\r\n\r\n    markerSize = new kakao.maps.Size(MARKER_WIDTH, MARKER_HEIGHT); // 기본, 클릭 마커의 크기\r\n    markerOffset = new kakao.maps.Point(OFFSET_X, OFFSET_Y); // 기본, 클릭 마커의 기준좌표\r\n    overMarkerSize = new kakao.maps.Size(OVER_MARKER_WIDTH, OVER_MARKER_HEIGHT); // 오버 마커의 크기\r\n    overMarkerOffset = new kakao.maps.Point(OVER_OFFSET_X, OVER_OFFSET_Y); // 오버 마커의 기준 좌표\r\n    spriteImageSize = new kakao.maps.Size(SPRITE_WIDTH, SPRITE_HEIGHT); // 스프라이트 이미지의 크기\r\n  },\r\n  mounted() {\r\n    this.drawMap();\r\n    //filterAreaHeight\r\n    this.filterAreaHeight = document.getElementById(\"filterArea\").offsetHeight;\r\n    // console.log(this.filterAreaHeight)\r\n  },\r\n  computed: {\r\n    ...mapState([\"searchList\"]),\r\n  },\r\n  methods: {\r\n    addMapScript() {\r\n      console.log(\"ddd\");\r\n      const script = document.createElement(\"script\"); /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"http://dapi.kakao.com/v2/maps/sdk.js?appkey=053dd3145f395e73cbb5211bedf3e97f&libraries=services\";\r\n      document.head.appendChild(script);\r\n    },\r\n    addServiceScript() {\r\n      // const script = document.createElement('script') /* global kakao */\r\n      // script.onload = () => kakao.maps.load(this.initMap)\r\n      // script.src =\r\n      //   'http://dapi.kakao.com/v2/maps/sdk.js?appkey=053dd3145f395e73cbb5211bedf3e97f&libraries=services'\r\n      // document.head.appendChild(script)\r\n    },\r\n    drawMap() {\r\n      var mapContainer = document.getElementById(\"map\"); // 지도를 표시할 div\r\n      var mapOption = {\r\n        center: new kakao.maps.LatLng(33.450701, 127.1), // 지도의 중심좌표\r\n        level: 4, // 지도의 확대 레벨\r\n      };\r\n\r\n      this.map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n\r\n      // HTML5의 geolocation으로 사용할 수 있는지 확인합니다\r\n      if (navigator.geolocation) {\r\n        // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          var lat = position.coords.latitude; // 위도\r\n          var lon = position.coords.longitude; // 경도\r\n\r\n          console.log(lat, lon);\r\n\r\n          var locPosition = new kakao.maps.LatLng(37.493, 127.042); // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n\r\n          var message = '<div style=\"padding:5px;\">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다\r\n\r\n          //현재위치 행정구역명으로 바꾸기\r\n          // var geocoder = new kakao.maps.services.Geocoder()\r\n          // geocoder.coord2Address(lon, lat, (result, status) => {\r\n          //   console.log(result[0].address.region_3depth_name)\r\n          //   console.log(result[0].address.region_2depth_name)\r\n          //   if (status === kakao.maps.services.Status.OK) {\r\n          //     // console.log(result)\r\n          //     // console.log(result[0].address.address_name)\r\n          //     message =\r\n          //       '<div style=\"padding:5px;\">' +\r\n          //       result[0].address.region_2depth_name +\" \"+ result[0].address.region_3depth_name+\r\n          //       '</div>'\r\n          //     this.displayMarker(locPosition, message)\r\n          //   }else{\r\n          //     this.displayMarker(locPosition, message)\r\n          //   }\r\n          // })\r\n\r\n          for (var i = 0, len = this.positions.length; i < len; i++) {\r\n            var gapX = MARKER_WIDTH + SPRITE_GAP, // 스프라이트 이미지에서 마커로 사용할 이미지 X좌표 간격 값\r\n              originY = (MARKER_HEIGHT + SPRITE_GAP) * i, // 스프라이트 이미지에서 기본, 클릭 마커로 사용할 Y좌표 값\r\n              overOriginY = (OVER_MARKER_HEIGHT + SPRITE_GAP) * i, // 스프라이트 이미지에서 오버 마커로 사용할 Y좌표 값\r\n              normalOrigin = new kakao.maps.Point(0, originY), // 스프라이트 이미지에서 기본 마커로 사용할 영역의 좌상단 좌표\r\n              clickOrigin = new kakao.maps.Point(gapX, originY), // 스프라이트 이미지에서 마우스오버 마커로 사용할 영역의 좌상단 좌표\r\n              overOrigin = new kakao.maps.Point(gapX * 2, overOriginY); // 스프라이트 이미지에서 클릭 마커로 사용할 영역의 좌상단 좌표\r\n\r\n            // 마커를 생성하고 지도위에 표시합니다\r\n            this.addMarker(\r\n              this.positions[i],\r\n              normalOrigin,\r\n              overOrigin,\r\n              clickOrigin\r\n            );\r\n          }\r\n\r\n          this.displayMarker(locPosition, message);\r\n        });\r\n      } else {\r\n        // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n        var locPosition = new kakao.maps.LatLng(33.450701, 126.570667);\r\n        var message = \"geolocation을 사용할수 없어요..\";\r\n\r\n        this.displayMarker(locPosition, message);\r\n      }\r\n    },\r\n    addMarker(positions, normalOrigin, overOrigin, clickOrigin) {\r\n      var position = new kakao.maps.LatLng(\r\n        positions.latitude,\r\n        positions.longitude\r\n      );\r\n      // 기본 마커이미지, 오버 마커이미지, 클릭 마커이미지를 생성합니다\r\n      var normalImage = this.createMarkerImage(\r\n          markerSize,\r\n          markerOffset,\r\n          normalOrigin\r\n        ),\r\n        overImage = this.createMarkerImage(\r\n          overMarkerSize,\r\n          overMarkerOffset,\r\n          overOrigin\r\n        ),\r\n        clickImage = this.createMarkerImage(\r\n          markerSize,\r\n          markerOffset,\r\n          clickOrigin\r\n        );\r\n\r\n      // 마커를 생성하고 이미지는 기본 마커 이미지를 사용합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: this.map,\r\n        position: position,\r\n        image: normalImage,\r\n      });\r\n\r\n      // 마커 객체에 마커아이디와 마커의 기본 이미지를 추가합니다\r\n      marker.normalImage = normalImage;\r\n\r\n      // 마커에 mouseover 이벤트를 등록합니다\r\n      kakao.maps.event.addListener(marker, \"mouseover\", () => {\r\n        // 클릭된 마커가 없고, mouseover된 마커가 클릭된 마커가 아니면\r\n        // 마커의 이미지를 오버 이미지로 변경합니다\r\n        if (!this.selectedMarker || this.selectedMarker !== marker) {\r\n          marker.setImage(overImage);\r\n        }\r\n      });\r\n\r\n      // 마커에 mouseout 이벤트를 등록합니다\r\n      kakao.maps.event.addListener(marker, \"mouseout\", () => {\r\n        // 클릭된 마커가 없고, mouseout된 마커가 클릭된 마커가 아니면\r\n        // 마커의 이미지를 기본 이미지로 변경합니다\r\n        if (!this.selectedMarker || this.selectedMarker !== marker) {\r\n          marker.setImage(normalImage);\r\n        }\r\n      });\r\n\r\n      // 마커에 click 이벤트를 등록합니다\r\n      kakao.maps.event.addListener(marker, \"click\", () => {\r\n        // 클릭된 마커가 없고, click 마커가 클릭된 마커가 아니면\r\n        // 마커의 이미지를 클릭 이미지로 변경합니다\r\n        if (!this.selectedMarker || this.selectedMarker !== marker) {\r\n          // 클릭된 마커 객체가 null이 아니면\r\n          // 클릭된 마커의 이미지를 기본 이미지로 변경하고\r\n          !!this.selectedMarker &&\r\n            this.selectedMarker.setImage(this.selectedMarker.normalImage);\r\n\r\n          // 현재 클릭된 마커의 이미지는 클릭 이미지로 변경합니다\r\n          marker.setImage(clickImage);\r\n        }\r\n\r\n        // 클릭된 마커를 현재 클릭된 마커 객체로 설정합니다\r\n        this.selectedMarker = marker;\r\n      });\r\n    },\r\n    createMarkerImage(markerSize, offset, spriteOrigin) {\r\n      var markerImage = new kakao.maps.MarkerImage(\r\n        SPRITE_MARKER_URL, // 스프라이트 마커 이미지 URL\r\n        markerSize, // 마커의 크기\r\n        {\r\n          offset: offset, // 마커 이미지에서의 기준 좌표\r\n          spriteOrigin: spriteOrigin, // 스트라이프 이미지 중 사용할 영역의 좌상단 좌표\r\n          spriteSize: spriteImageSize, // 스프라이트 이미지의 크기\r\n        }\r\n      );\r\n\r\n      return markerImage;\r\n    },\r\n    displayMarker(locPosition, message) {\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: this.map,\r\n        position: locPosition,\r\n      });\r\n\r\n      var iwContent = message; // 인포윈도우에 표시할 내용\r\n      var iwRemoveable = true;\r\n\r\n      // 인포윈도우를 생성합니다\r\n      var infowindow = new kakao.maps.InfoWindow({\r\n        content: iwContent,\r\n        removable: iwRemoveable,\r\n      });\r\n\r\n      // 인포윈도우를 마커위에 표시합니다\r\n      infowindow.open(this.map, marker);\r\n\r\n      // 지도 중심좌표를 접속위치로 변경합니다\r\n      this.map.setCenter(locPosition);\r\n    },\r\n    categoryButtonColor(category) {\r\n      if (category == \"food\" && this.categoryFood) {\r\n        return \"primary\";\r\n      } else if (category == \"delivery\" && this.categoryDelivery) {\r\n        return \"primary\";\r\n      } else {\r\n        return \"white\";\r\n      }\r\n    },\r\n    categoryButtonClicked(category) {\r\n      if (category == \"food\" && this.categoryFood && !this.categoryDelivery)\r\n        return;\r\n      if (category == \"delivery\" && !this.categoryFood && this.categoryDelivery)\r\n        return;\r\n\r\n      if (category == \"food\") {\r\n        this.categoryFood = !this.categoryFood;\r\n      } else if (category == \"delivery\") {\r\n        this.categoryDelivery = !this.categoryDelivery;\r\n      }\r\n    },\r\n    distanceButtonColor(distance) {\r\n      // console.log(distance)\r\n      if (this.distance == distance) return \"primary\";\r\n      else return \"white\";\r\n    },\r\n    distanceButtonClicked(distance) {\r\n      this.distance = distance;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.fullpage-container {\r\n  /* height: 100%;*/\r\n  /* position: fixed; */\r\n  margin: 0px;\r\n  padding: 0px;\r\n}\r\n.fullpage-map {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n}\r\n</style>\r\n"]}]}